[{"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\index.js":"1","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\reportWebVitals.js":"2","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\App.js":"3","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\completed.js":"4","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\nav.js":"5","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Pending.js":"6","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\All.js":"7","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Top.js":"8","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Add.js":"9","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Data.js":"10","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Status.js":"11","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\reset.js":"12","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Checkbox.js":"13","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Delete.js":"14","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\Actions\\index.js":"15","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\reducer\\reducer.js":"16","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\count.js":"17","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\AllDel.js":"18"},{"size":634,"mtime":1608097951441,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1057,"mtime":1608126024884,"results":"22","hashOfConfig":"20"},{"size":5847,"mtime":1608096905517,"results":"23","hashOfConfig":"20"},{"size":555,"mtime":1608125675837,"results":"24","hashOfConfig":"20"},{"size":5891,"mtime":1608096905432,"results":"25","hashOfConfig":"20"},{"size":4868,"mtime":1608125474735,"results":"26","hashOfConfig":"20"},{"size":2319,"mtime":1608113460319,"results":"27","hashOfConfig":"20"},{"size":1565,"mtime":1608114106746,"results":"28","hashOfConfig":"20"},{"size":570,"mtime":1608096905247,"results":"29","hashOfConfig":"20"},{"size":321,"mtime":1608096905447,"results":"30","hashOfConfig":"20"},{"size":1070,"mtime":1608096905802,"results":"31","hashOfConfig":"20"},{"size":2080,"mtime":1608110608867,"results":"32","hashOfConfig":"20"},{"size":1206,"mtime":1608096905369,"results":"33","hashOfConfig":"20"},{"size":1065,"mtime":1608096938768,"results":"34","hashOfConfig":"20"},{"size":2940,"mtime":1608096950753,"results":"35","hashOfConfig":"20"},{"size":850,"mtime":1608124743818,"results":"36","hashOfConfig":"20"},{"size":1825,"mtime":1608128481683,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"z4brcm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\index.js",[],["83","84"],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\reportWebVitals.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\App.js",["85"],"// import logo from './logo.svg';\nimport './components/todo.css';\nimport Nav from './components/nav';\nimport All from './components/All';\nimport Completed from './components/completed'\nimport Pending from './components/Pending';\nimport Todo from './components/Top';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Sample from './components/count';\nimport { myTodo } from './Actions';\nimport  AllDel  from './components/AllDel';\n\nfunction App() {\n  return (<div style={{backgroundColor: '#f5f5f5'}} className='sample'>\n    <p className='heading'>Todos</p>\n      <div className='sample2'>\n     \n    <Todo/>\n    <Router>\n    <div className=\"App\">\n      \n      <Switch>\n        <Route path='/' exact component={All}/>\n        <Route path='/completed' exact component={Completed} />\n        <Route path='/pending' exact component={Pending} />\n      </Switch>\n      <div className='bottom'>\n        <Sample/>\n        <Nav/>\n        <AllDel/>\n      </div>\n      \n    </div>\n    </Router>\n    </div></div>\n  );\n}\n\nexport default App;\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\completed.js",["86","87","88","89","90","91","92","93"],"import React, { Component } from 'react'\r\nimport './todo.css'\r\nimport { BiEditAlt } from 'react-icons/bi';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n// import { IoMdArrowRoundBack } from 'react-icons/io';\r\n// import Data from './data';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle, changeSelect } from '../Actions';\r\nimport Data from './Data';\r\n// import Edit from './Edit';\r\nimport Delete  from './Delete';\r\nimport Status  from './Status';\r\nimport Checkbox from './Checkbox';\r\nimport { IoSaveOutline } from 'react-icons/io5';\r\n// import Save from './Save';\r\n// import Cancel  from './Cancel';\r\nimport Reset from './reset';\r\nimport Add  from './Add';\r\n// import Category from './category';\r\nimport { BrowserRouter as BRouter } from 'react-router-dom'; \r\n// import Router from './router';\r\n// import Category from './category';\r\n// import All from './All';\r\n// import Completed from './completed';\r\nimport Pending from './Pending';\r\nimport { Route } from \"react-router-dom\";\r\n\r\n\r\nexport class Completed extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             text:'',\r\n             data:'',\r\n             modify:null,\r\n             removeItems:[],\r\n        }\r\n    }\r\n    titlechange = ( index) => {\r\n        console.log('save clicked', this.state.data);\r\n        {this.props.changeTitle(this.state.data,index)}\r\n        {this.props.isEdit(index)}\r\n        this.setState({\r\n            data:'',\r\n        })\r\n    }\r\n    edited = (index) => {\r\n        console.log('edit linked', index);\r\n        this.props.isEdit(index);\r\n        this.setState({\r\n            // index:index,\r\n            modify:index,\r\n        })\r\n        console.log('index', this.state.modify)\r\n    }\r\n    render() {\r\n        const filtered= this.props.items.filter(item => item.status ==='Complete')\r\n        console.log('completed', filtered);\r\n        return (\r\n            <div>\r\n                 <table className='table'>\r\n                        <tbody className='tbody'>\r\n                            {filtered.map((item,index)=>(\r\n                                <div key={index} className='rowParent' >\r\n                                    <tr className='row'>\r\n                                        <td className='item1'>\r\n                                            <Checkbox status={item.status} index={index}/>\r\n                                        </td>\r\n                                        {item.readonly === false?\r\n                                            <td className='item2'>\r\n                                                <input value={this.state.data} autoFocus={true} className='editText' onChange={(event)=>this.setState({data:event.target.value})} placeholder={item.title}/>\r\n                                            </td>\r\n                                            :\r\n                                            <tr>\r\n                                                <td onClick={()=>this.edited(index)} className='item'>\r\n                                                 <Data title={item.title} status={item.status}/>\r\n                                                   \r\n                                                </td>\r\n                                                \r\n                                            </tr>\r\n                                        }\r\n                                        <td>\r\n                                            <div className='buttons'>\r\n                                                {item.readonly === false ?\r\n                                                    <div>\r\n                                                        <button className='edit1' onClick={()=>this.titlechange(index)}>\r\n                                                            <IoSaveOutline/>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div style={{opacity: '0'}}>\r\n                                                        <button className='edit' onClick={()=>this.edited(index)}>\r\n                                                            <span className='word'>\r\n                                                                <BiEditAlt/>\r\n                                                            </span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                }\r\n                                                <Delete index={index}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </div>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                {/* <h1>All</h1> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default All\r\n\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        statusChange: (payload, index) => dispatch(statusChange(payload,index)),\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        isEdit: (index) => dispatch(isEdit(index)),\r\n        changeTitle: (payload,index) => dispatch(changeTitle(payload,index)),\r\n        changeSelect:(index) => dispatch(changeSelect(index)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Completed)\r\n\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\nav.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Pending.js",["94","95","96","97","98","99","100","101"],"import React, { Component } from 'react'\r\nimport './todo.css'\r\nimport { BiEditAlt } from 'react-icons/bi';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n// import { IoMdArrowRoundBack } from 'react-icons/io';\r\nimport { IoSaveOutline } from 'react-icons/io5';\r\n// import Data from './data';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle, changeSelect } from '../Actions';\r\nimport Data from './Data';\r\n// import Edit from './Edit';\r\nimport Delete  from './Delete';\r\nimport Status  from './Status';\r\nimport Checkbox from './Checkbox';\r\n// import Save from './Save';\r\n// import Cancel  from './Cancel';\r\nimport Reset from './reset';\r\nimport Add  from './Add';\r\n// import Category from './category';\r\nimport { BrowserRouter as BRouter } from 'react-router-dom'; \r\n// import Router from './router';\r\n// import Category from './category';\r\n// import All from './All';\r\nimport Completed from './completed';\r\n// import Pending from './Pending';\r\nimport { Route } from \"react-router-dom\";\r\n\r\n\r\nclass Pending extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             text:'',\r\n             data:'',\r\n             modify:null,\r\n             removeItems:[],\r\n        }\r\n    }\r\n    titlechange = ( index) => {\r\n        console.log('save clicked', this.state.data);\r\n        {this.props.changeTitle(this.state.data,index)}\r\n        {this.props.isEdit(index)}\r\n        this.setState({\r\n            data:'',\r\n        })\r\n    }\r\n    edited = (index) => {\r\n        console.log('edit linked', index)\r\n        this.props.isEdit(index)\r\n        this.setState({\r\n            // index:index,\r\n            modify:index,\r\n        })\r\n        console.log('index', this.state.modify)\r\n    }\r\n    render() {\r\n        const filtered= this.props.items.filter(item => item.status ==='Incomplete')\r\n        console.log('completed', filtered);\r\n        return (\r\n            <div>\r\n                 <table className='table'>\r\n                        <tbody className='tbody'>\r\n                            {filtered.map((item,index)=>(\r\n                                <div key={index} className='rowParent'  style={{opacity:item.status==='Complete' ? 0.5: 1}}>\r\n                                    <tr className='row'>\r\n                                        <td className='item1'>\r\n                                            <Checkbox status={item.status} index={index}/>\r\n                                        </td>\r\n                                        {item.readonly === false?\r\n                                            <td className='item2'>\r\n                                                <input value={this.state.data} autoFocus={true} className='editText' onChange={(event)=>this.setState({data:event.target.value})} placeholder={item.title}/>\r\n                                            </td>\r\n                                            :\r\n                                            <tr>\r\n                                                <td onClick={()=>this.edited(index)} className='item' >\r\n                                                 <Data title={item.title} status={item.status}  />\r\n                                                   \r\n                                                </td>\r\n                                                \r\n                                            </tr>\r\n                                        }\r\n                                        <td>\r\n                                            <div className='buttons'>\r\n                                                {item.readonly === false ?\r\n                                                    <div>\r\n                                                        <button className='edit1' onClick={()=>this.titlechange(index)}>\r\n                                                            <IoSaveOutline/>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div style={{opacity: '0'}}>\r\n                                                        <button className='edit' onClick={()=>this.edited(index)}>\r\n                                                            <span className='word'>\r\n                                                                <BiEditAlt/>\r\n                                                            </span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                }\r\n                                                <Delete index={index}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </div>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                {/* <h1>All</h1> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default All\r\n\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        statusChange: (payload, index) => dispatch(statusChange(payload,index)),\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        isEdit: (index) => dispatch(isEdit(index)),\r\n        changeTitle: (payload,index) => dispatch(changeTitle(payload,index)),\r\n        changeSelect:(index) => dispatch(changeSelect(index)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Pending)\r\n\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\All.js",["102","103","104","105","106","107","108","109","110","111"],"import React, { Component } from 'react'\r\nimport './todo.css'\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { BiEditAlt } from 'react-icons/bi';\r\nimport { IoSaveOutline } from 'react-icons/io5';\r\n// import Data from './data';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle, changeSelect } from '../Actions';\r\nimport Data from './Data';\r\n// import Edit from './Edit';\r\nimport Delete  from './Delete';\r\nimport Status  from './Status';\r\nimport Checkbox from './Checkbox';\r\n// import Save from './Save';\r\n// import Cancel  from './Cancel';\r\nimport Reset from './reset';\r\nimport Add  from './Add';\r\n// import Category from './category';\r\nimport { BrowserRouter as BRouter } from 'react-router-dom'; \r\n// import Router from './router';\r\n// import Category from './category';\r\n// import All from './All';\r\nimport Completed from './completed';\r\nimport Pending from './Pending';\r\nimport { Route } from \"react-router-dom\";\r\n\r\n\r\n class All extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             text:'',\r\n             data:'',\r\n             modify:null,\r\n             removeItems:[],\r\n        }\r\n    }\r\n    titlechange = ( index) => {\r\n        console.log('save clicked', this.state.data);\r\n        {this.props.changeTitle(this.state.data,index)}\r\n        {this.props.isEdit(index)}\r\n        this.setState({\r\n            data:'',\r\n        })\r\n    }\r\n    edited = (index) => {\r\n        console.log('edit linked', index)\r\n        this.props.isEdit(index)\r\n        this.setState({\r\n            // index:index,\r\n            modify:index,\r\n        })\r\n        console.log('index', this.state.modify)\r\n    }\r\n    render() {\r\n        const filtered=this.props.items;\r\n        return (\r\n            <div>\r\n                 <table className='table'>\r\n                        <tbody className='tbody'>\r\n                            {filtered.map((item,index)=>(\r\n                                <div key={index} className='rowParent' \r\n                                //  style={{opacity:item.status==='Complete' ? 0.5: 1}}\r\n                                 >\r\n                                    <tr className='row'>\r\n                                        <td className='item1'>\r\n                                            <Checkbox status={item.status} index={index}/>\r\n                                        </td>\r\n                                        {item.readonly === false?\r\n                                            <td className='item2'>\r\n                                               <div> <input value={this.state.data} autoFocus={true} className='editText' onChange={(event)=>this.setState({data:event.target.value})} placeholder={item.title}/>\r\n                                               <button className='edit1' onClick={()=>this.titlechange(index)}>\r\n                                                            <IoSaveOutline/>\r\n                                                        </button>\r\n                                               </div>\r\n                                            </td>\r\n                                            :\r\n                                            <tr className='item2'>\r\n                                            <td onClick={()=>this.edited(index)} className='item'>\r\n                                             <Data title={item.title} status={item.status}  />\r\n                                             \r\n                                            </td><td>\r\n                                            <Delete index={index}/>\r\n                                            </td>\r\n                                            \r\n                                        </tr>\r\n                                        }\r\n                                        \r\n                                    </tr>\r\n                                </div>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                {/* <h1>All</h1> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default All\r\n\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        statusChange: (payload, index) => dispatch(statusChange(payload,index)),\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        isEdit: (index) => dispatch(isEdit(index)),\r\n        changeTitle: (payload,index) => dispatch(changeTitle(payload,index)),\r\n        changeSelect:(index) => dispatch(changeSelect(index)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(All)\r\n\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Top.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Add.js",["112","113"],"import './todo.css'\r\n// import {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle } from '../Actions';\r\n\r\n\r\nimport React, {   useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo,newTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle } from '../Actions';\r\n\r\n\r\nfunction Modal1({newTodo}) {\r\n    const [value, setValue] = useState(\"\");\r\n    \r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        newTodo({title:value, status:'Incomplete', readonly:true, select:false, edit:false });\r\n        setValue(\"\");\r\n    };\r\n       \r\n    \r\n    \r\n    return (        \r\n        <form onSubmit={handleSubmit}>\r\n            <span ><input\r\n                type=\"text\"\r\n                value={value}\r\n                autoFocus={true}\r\n                className='input'\r\n                placeholder=\"What needs to be done?\"\r\n                onChange={e => setValue(e.target.value)}\r\n            /></span>\r\n        </form>\r\n    )\r\n}\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        changeTitle: (payload,index) => dispatch(changeTitle(payload,index)),\r\n        isEdit: (index) => dispatch(isEdit(index)),\r\n        newTodo:(payload) =>dispatch(newTodo(payload)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Modal1)\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Data.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Status.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\reset.js",["114"],"import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport './todo.css'\r\nimport { GrPowerReset } from 'react-icons/gr';\r\nimport { IoMdRefreshCircle } from \"react-icons/io\";\r\nimport {myTodo } from '../Actions';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n// import { render } from '@testing-library/react';\r\n\r\nclass Cancel extends Component {\r\n\r\n    reset=()=>{\r\n   \r\n        const newList= [];\r\n        this.props.myTodo(newList)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='resetbtn1'>\r\n                <button className='resetbtn' onClick={this.reset}>\r\n                   <span className='reset'> <IoMdRefreshCircle/> </span>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cancel)\r\n\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Checkbox.js",["115"],"import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport './todo.css'\r\nimport { TiTick} from \"react-icons/ti\";\r\nimport { statusChange, changeIndex, removeIndex } from '../Actions';\r\n\r\nclass Checkbox extends Component {\r\n\r\n    \r\n    checkboxx=(value,index)=>{\r\n        console.log('checkbox clicked')\r\n        const items=this.props.items\r\n        if(value==='Incomplete'){\r\n           this.props.statusChange('Complete', index)\r\n        }\r\n        else{\r\n            this.props.changeIndex('Incomplete',index) \r\n            }\r\n        for(let i=index; i<items.length;i++){\r\n            if(items[i].status==='Complete'){\r\n               \r\n            }\r\n    \r\n        }console.log('for loop done')\r\n       \r\n    }\r\n    render(){\r\n        const {index,status}=this.props\r\n        console.log('index hai',index)\r\n        return (\r\n            <div >\r\n                <label class='custom-radio-btn'>    \r\n                <input className='checkbox'\r\n                type='checkbox'\r\n                defaultChecked={false}\r\n                checked={status=== 'Complete'}\r\n                onClick={()=>\r\n                   {\r\n                       if(!this.props.items[index].readonly){\r\n                         return(  null)\r\n                       } \r\n                       else {\r\n                           this.checkboxx(status,index)}\r\n                        }\r\n                    }\r\n               />\r\n            \r\n               \r\n                \r\n                {/* <span className='checkmark'></span> */}\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\r\n        statusChange: (payload, index) => dispatch(statusChange(payload,index)),\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Checkbox)\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Delete.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\Actions\\index.js",["116","117","118","119"],"export const myTodo = (items)=>{\r\n    return{\r\n        type:'DATA_CREATED',\r\n        payload:items\r\n    }\r\n}\r\nexport const newTodo= (items)=>{\r\n    return{\r\n        type:'ITEM_ADDED',\r\n        payload:items\r\n    }\r\n}\r\nexport const statusChange =(payload,index)=>{\r\n    return{\r\n        type: 'STATUS_CHANGED',\r\n        payload,\r\n        index\r\n    }\r\n}\r\n\r\nexport const changeIndex =(payload,index) =>(\r\n    {\r\n        type:'CHANGE_INDEX',\r\n        payload,\r\n        index\r\n    }\r\n)\r\n\r\nexport  const removeIndex = (index)=>(\r\n    console.log('remove clicked'),\r\n    {\r\n        type:'REMOVE_INDEX',\r\n        index\r\n}\r\n)\r\n\r\nexport  const isEdit = (index)=>(\r\n    console.log('edit clicked'),\r\n    {\r\n        type:'EDIT_INDEX',\r\n        index\r\n}\r\n)\r\n\r\nexport const changeTitle =(payload,index) =>(\r\n    console.log('title changed', payload),\r\n    {\r\n        type:'TITLE_CHANGED',\r\n        payload,\r\n        index\r\n    }\r\n)\r\nexport const  changeSelect=(index) =>(\r\n    console.log('select changed', index),\r\n    {\r\n        type:'SELECT_CHANGED',\r\n        index\r\n    }\r\n)","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\reducer\\reducer.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\count.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\AllDel.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":10,"column":10,"nodeType":"142","messageId":"143","endLine":10,"endColumn":16},{"ruleId":"140","severity":1,"message":"144","line":12,"column":8,"nodeType":"142","messageId":"143","endLine":12,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":17,"column":8,"nodeType":"142","messageId":"143","endLine":17,"endColumn":13},{"ruleId":"140","severity":1,"message":"146","line":18,"column":8,"nodeType":"142","messageId":"143","endLine":18,"endColumn":11},{"ruleId":"140","severity":1,"message":"147","line":20,"column":27,"nodeType":"142","messageId":"143","endLine":20,"endColumn":34},{"ruleId":"140","severity":1,"message":"148","line":25,"column":8,"nodeType":"142","messageId":"143","endLine":25,"endColumn":15},{"ruleId":"140","severity":1,"message":"149","line":26,"column":10,"nodeType":"142","messageId":"143","endLine":26,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":41,"column":9,"nodeType":"152","messageId":"153","endLine":41,"endColumn":56},{"ruleId":"150","severity":1,"message":"151","line":42,"column":9,"nodeType":"152","messageId":"153","endLine":42,"endColumn":35},{"ruleId":"140","severity":1,"message":"144","line":13,"column":8,"nodeType":"142","messageId":"143","endLine":13,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":17,"column":8,"nodeType":"142","messageId":"143","endLine":17,"endColumn":13},{"ruleId":"140","severity":1,"message":"146","line":18,"column":8,"nodeType":"142","messageId":"143","endLine":18,"endColumn":11},{"ruleId":"140","severity":1,"message":"147","line":20,"column":27,"nodeType":"142","messageId":"143","endLine":20,"endColumn":34},{"ruleId":"140","severity":1,"message":"154","line":24,"column":8,"nodeType":"142","messageId":"143","endLine":24,"endColumn":17},{"ruleId":"140","severity":1,"message":"149","line":26,"column":10,"nodeType":"142","messageId":"143","endLine":26,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":41,"column":9,"nodeType":"152","messageId":"153","endLine":41,"endColumn":56},{"ruleId":"150","severity":1,"message":"151","line":42,"column":9,"nodeType":"152","messageId":"153","endLine":42,"endColumn":35},{"ruleId":"140","severity":1,"message":"155","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":19},{"ruleId":"140","severity":1,"message":"144","line":12,"column":8,"nodeType":"142","messageId":"143","endLine":12,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":16,"column":8,"nodeType":"142","messageId":"143","endLine":16,"endColumn":13},{"ruleId":"140","severity":1,"message":"146","line":17,"column":8,"nodeType":"142","messageId":"143","endLine":17,"endColumn":11},{"ruleId":"140","severity":1,"message":"147","line":19,"column":27,"nodeType":"142","messageId":"143","endLine":19,"endColumn":34},{"ruleId":"140","severity":1,"message":"154","line":23,"column":8,"nodeType":"142","messageId":"143","endLine":23,"endColumn":17},{"ruleId":"140","severity":1,"message":"148","line":24,"column":8,"nodeType":"142","messageId":"143","endLine":24,"endColumn":15},{"ruleId":"140","severity":1,"message":"149","line":25,"column":10,"nodeType":"142","messageId":"143","endLine":25,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":40,"column":9,"nodeType":"152","messageId":"153","endLine":40,"endColumn":56},{"ruleId":"150","severity":1,"message":"151","line":41,"column":9,"nodeType":"152","messageId":"153","endLine":41,"endColumn":35},{"ruleId":"140","severity":1,"message":"156","line":7,"column":25,"nodeType":"142","messageId":"143","endLine":7,"endColumn":37},{"ruleId":"140","severity":1,"message":"157","line":7,"column":39,"nodeType":"142","messageId":"143","endLine":7,"endColumn":50},{"ruleId":"140","severity":1,"message":"158","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":22},{"ruleId":"140","severity":1,"message":"159","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":30,"column":34,"nodeType":"162","messageId":"163","endLine":30,"endColumn":35},{"ruleId":"160","severity":1,"message":"161","line":38,"column":32,"nodeType":"162","messageId":"163","endLine":38,"endColumn":33},{"ruleId":"160","severity":1,"message":"161","line":46,"column":42,"nodeType":"162","messageId":"163","endLine":46,"endColumn":43},{"ruleId":"160","severity":1,"message":"161","line":54,"column":41,"nodeType":"162","messageId":"163","endLine":54,"endColumn":42},{"ruleId":"140","severity":1,"message":"155","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":19},{"ruleId":"140","severity":1,"message":"164","line":5,"column":10,"nodeType":"142","messageId":"143","endLine":5,"endColumn":23},{"ruleId":"140","severity":1,"message":"156","line":8,"column":17,"nodeType":"142","messageId":"143","endLine":8,"endColumn":29},{"ruleId":"140","severity":1,"message":"157","line":8,"column":31,"nodeType":"142","messageId":"143","endLine":8,"endColumn":42},{"ruleId":"140","severity":1,"message":"165","line":8,"column":57,"nodeType":"142","messageId":"143","endLine":8,"endColumn":63},{"ruleId":"140","severity":1,"message":"166","line":8,"column":65,"nodeType":"142","messageId":"143","endLine":8,"endColumn":76},{"ruleId":"140","severity":1,"message":"167","line":8,"column":78,"nodeType":"142","messageId":"143","endLine":8,"endColumn":90},{"ruleId":"140","severity":1,"message":"168","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":12},{"ruleId":"140","severity":1,"message":"169","line":11,"column":8,"nodeType":"142","messageId":"143","endLine":11,"endColumn":14},{"ruleId":"140","severity":1,"message":"144","line":12,"column":8,"nodeType":"142","messageId":"143","endLine":12,"endColumn":14},{"ruleId":"140","severity":1,"message":"170","line":13,"column":8,"nodeType":"142","messageId":"143","endLine":13,"endColumn":16},{"ruleId":"140","severity":1,"message":"145","line":16,"column":8,"nodeType":"142","messageId":"143","endLine":16,"endColumn":13},{"ruleId":"140","severity":1,"message":"146","line":18,"column":8,"nodeType":"142","messageId":"143","endLine":18,"endColumn":11},{"ruleId":"140","severity":1,"message":"147","line":20,"column":27,"nodeType":"142","messageId":"143","endLine":20,"endColumn":34},{"ruleId":"140","severity":1,"message":"154","line":24,"column":8,"nodeType":"142","messageId":"143","endLine":24,"endColumn":17},{"ruleId":"140","severity":1,"message":"148","line":25,"column":8,"nodeType":"142","messageId":"143","endLine":25,"endColumn":15},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'myTodo' is defined but never used.","Identifier","unusedVar","'Status' is defined but never used.","'Reset' is defined but never used.","'Add' is defined but never used.","'BRouter' is defined but never used.","'Pending' is defined but never used.","'Route' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Completed' is defined but never used.","'BiEditAlt' is defined but never used.","'statusChange' is defined but never used.","'changeIndex' is defined but never used.","'GrPowerReset' is defined but never used.","'TiTick' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'IoSaveOutline' is defined but never used.","'isEdit' is defined but never used.","'changeTitle' is defined but never used.","'changeSelect' is defined but never used.","'Data' is defined but never used.","'Delete' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]