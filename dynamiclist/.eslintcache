[{"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\index.js":"1","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\reportWebVitals.js":"2","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\App.js":"3","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\completed.js":"4","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\nav.js":"5","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Pending.js":"6","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\All.js":"7","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Top.js":"8","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Add.js":"9","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Data.js":"10","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Status.js":"11","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\reset.js":"12","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Checkbox.js":"13","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Delete.js":"14","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\Actions\\index.js":"15","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\reducer\\reducer.js":"16","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\count.js":"17","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\AllDel.js":"18","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\footer.js":"19"},{"size":634,"mtime":1608097951441,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1808,"mtime":1608210962201,"results":"23","hashOfConfig":"21"},{"size":4869,"mtime":1608188343052,"results":"24","hashOfConfig":"21"},{"size":555,"mtime":1608125675837,"results":"25","hashOfConfig":"21"},{"size":4910,"mtime":1608188439478,"results":"26","hashOfConfig":"21"},{"size":4932,"mtime":1608213263436,"results":"27","hashOfConfig":"21"},{"size":2319,"mtime":1608113460319,"results":"28","hashOfConfig":"21"},{"size":1565,"mtime":1608114106746,"results":"29","hashOfConfig":"21"},{"size":570,"mtime":1608096905247,"results":"30","hashOfConfig":"21"},{"size":321,"mtime":1608096905447,"results":"31","hashOfConfig":"21"},{"size":1070,"mtime":1608096905802,"results":"32","hashOfConfig":"21"},{"size":2016,"mtime":1608212012307,"results":"33","hashOfConfig":"21"},{"size":1206,"mtime":1608096905369,"results":"34","hashOfConfig":"21"},{"size":1065,"mtime":1608096938768,"results":"35","hashOfConfig":"21"},{"size":2940,"mtime":1608096950753,"results":"36","hashOfConfig":"21"},{"size":850,"mtime":1608124743818,"results":"37","hashOfConfig":"21"},{"size":1825,"mtime":1608128481683,"results":"38","hashOfConfig":"21"},{"size":998,"mtime":1608203769715,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"z4brcm",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\index.js",[],["86","87"],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\reportWebVitals.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\App.js",["88","89","90"],"// import logo from './logo.svg';\nimport './components/todo.css';\nimport Nav from './components/nav';\nimport All from './components/All';\nimport Completed from './components/completed'\nimport Pending from './components/Pending';\nimport Todo from './components/Top';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Sample from './components/count';\nimport {myTodo} from './Actions/index';\nimport {connect} from 'react-redux';\nimport  AllDel  from './components/AllDel';\nimport { Footer } from './components/footer';\n\nfunction App() {\n  // const items = props\n  return (<div style={{backgroundColor: '#f5f5f5'}} className='sample'>\n    <p className='heading'>Todos</p>\n\n    {/* <div class=\"checkbox-wrapper\">\t\n      <input type=\"checkbox\" id=\"check\" hidden />\t\n      <label for=\"check\" class=\"checkmark\"></label>\t\n    </div> */}\n      <div className='sample2'>\n\n     \n        <Todo/>\n        \n          <Router>\n          <div className=\"App\">\n          \n            <Switch>\n              <Route path='/' exact component={All}/>\n              <Route path='/completed' exact component={Completed} />\n              <Route path='/pending' exact component={Pending} />\n            </Switch>\n           \n           \n<div >\n              \n              <Footer/>         \n            </div> \n          </div>\n        </Router> \n        \n\n        </div>\n        </div>\n  );\n}\n\nconst mapStateToProps= state =>{\n  const {items} =state.todo\n  return{\n   items   \n  }\n}\nconst mapDispatchToProps = (dispatch) =>{\n  return{\n      myTodo : (payload)=> dispatch(myTodo(payload)),\n      // changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\n      // removeIndex: (index)=> dispatch(removeIndex(index)),\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n\n\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\completed.js",["91","92","93","94","95","96","97","98","99"],"import React, { Component } from 'react'\r\nimport './todo.css'\r\nimport { BiEditAlt } from 'react-icons/bi';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n// import { IoMdArrowRoundBack } from 'react-icons/io';\r\n// import Data from './data';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle, changeSelect } from '../Actions';\r\nimport Data from './Data';\r\n// import Edit from './Edit';\r\nimport Delete  from './Delete';\r\nimport Status  from './Status';\r\nimport Checkbox from './Checkbox';\r\nimport { IoSaveOutline } from 'react-icons/io5';\r\n// import Save from './Save';\r\n// import Cancel  from './Cancel';\r\nimport Reset from './reset';\r\nimport Add  from './Add';\r\n// import Category from './category';\r\nimport { BrowserRouter as BRouter } from 'react-router-dom'; \r\n// import Router from './router';\r\n// import Category from './category';\r\n// import All from './All';\r\n// import Completed from './completed';\r\nimport Pending from './Pending';\r\nimport { Route } from \"react-router-dom\";\r\n\r\n\r\nexport class Completed extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             text:'',\r\n             data:'',\r\n             modify:null,\r\n             removeItems:[],\r\n        }\r\n    }\r\n    titlechange = ( index) => {\r\n        console.log('save clicked', this.state.data);\r\n        {this.props.changeTitle(this.state.data,index)}\r\n        {this.props.isEdit(index)}\r\n        this.setState({\r\n            data:'',\r\n        })\r\n    }\r\n    edited = (index) => {\r\n        console.log('edit linked', index);\r\n        this.props.isEdit(index);\r\n        this.setState({\r\n            // index:index,\r\n            modify:index,\r\n        })\r\n        console.log('index', this.state.modify)\r\n    }\r\n    render() {\r\n        const filtered= this.props.items.filter(item => item.status ==='Complete')\r\n        console.log('completed', filtered);\r\n        return (\r\n            <div>\r\n                 <table className='table'>\r\n                        <tbody className='tbody'>\r\n                            {filtered.map((item,index)=>(\r\n                                <div key={index} className='rowParent' >\r\n                                    <tr className='row'>\r\n                                        <td className='item1'>\r\n                                            <Checkbox status={item.status} index={index}/>\r\n                                        </td>\r\n                                        {item.readonly === false?\r\n                                            <td className='item2'>\r\n                                               <div> <input value={this.state.data} autoFocus={true} className='editText' onChange={(event)=>this.setState({data:event.target.value})} placeholder={item.title}/>\r\n                                               <button className='edit1' onClick={()=>this.titlechange(index)}>\r\n                                                            <IoSaveOutline/>\r\n                                                        </button>\r\n                                               </div>\r\n                                            </td>\r\n                                            :\r\n                                            <tr className='item2'>\r\n                                            <td onClick={()=>this.edited(index)} className='item'>\r\n                                             <Data title={item.title} status={item.status}  />\r\n                                             \r\n                                            </td><td>\r\n                                            <Delete index={index}/>\r\n                                            </td>\r\n                                            \r\n                                        </tr>\r\n                                        }\r\n                                    </tr>\r\n                                </div>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                {/* <h1>All</h1> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default All\r\n\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        statusChange: (payload, index) => dispatch(statusChange(payload,index)),\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        isEdit: (index) => dispatch(isEdit(index)),\r\n        changeTitle: (payload,index) => dispatch(changeTitle(payload,index)),\r\n        changeSelect:(index) => dispatch(changeSelect(index)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Completed)\r\n\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\nav.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Pending.js",["100","101","102","103","104","105","106","107","108"],"import React, { Component } from 'react'\r\nimport './todo.css'\r\nimport { BiEditAlt } from 'react-icons/bi';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n// import { IoMdArrowRoundBack } from 'react-icons/io';\r\nimport { IoSaveOutline } from 'react-icons/io5';\r\n// import Data from './data';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle, changeSelect } from '../Actions';\r\nimport Data from './Data';\r\n// import Edit from './Edit';\r\nimport Delete  from './Delete';\r\nimport Status  from './Status';\r\nimport Checkbox from './Checkbox';\r\n// import Save from './Save';\r\n// import Cancel  from './Cancel';\r\nimport Reset from './reset';\r\nimport Add  from './Add';\r\n// import Category from './category';\r\nimport { BrowserRouter as BRouter } from 'react-router-dom'; \r\n// import Router from './router';\r\n// import Category from './category';\r\n// import All from './All';\r\nimport Completed from './completed';\r\n// import Pending from './Pending';\r\nimport { Route } from \"react-router-dom\";\r\n\r\n\r\nclass Pending extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             text:'',\r\n             data:'',\r\n             modify:null,\r\n             removeItems:[],\r\n        }\r\n    }\r\n    titlechange = ( index) => {\r\n        console.log('save clicked', this.state.data);\r\n        {this.props.changeTitle(this.state.data,index)}\r\n        {this.props.isEdit(index)}\r\n        this.setState({\r\n            data:'',\r\n        })\r\n    }\r\n    edited = (index) => {\r\n        console.log('edit linked', index)\r\n        this.props.isEdit(index)\r\n        this.setState({\r\n            // index:index,\r\n            modify:index,\r\n        })\r\n        console.log('index', this.state.modify)\r\n    }\r\n    render() {\r\n        const filtered= this.props.items.filter(item => item.status ==='Incomplete')\r\n        console.log('completed', filtered);\r\n        return (\r\n            <div>\r\n                 <table className='table'>\r\n                        <tbody className='tbody'>\r\n                            {filtered.map((item,index)=>(\r\n                                <div key={index} className='rowParent'  style={{opacity:item.status==='Complete' ? 0.5: 1}}>\r\n                                    <tr className='row'>\r\n                                        <td className='item1'>\r\n                                            <Checkbox status={item.status} index={index}/>\r\n                                        </td>\r\n                                        {item.readonly === false?\r\n                                            <td className='item2'>\r\n                                               <div> <input value={this.state.data} autoFocus={true} className='editText' onChange={(event)=>this.setState({data:event.target.value})} placeholder={item.title}/>\r\n                                               <button className='edit1' onClick={()=>this.titlechange(index)}>\r\n                                                            <IoSaveOutline/>\r\n                                                        </button>\r\n                                               </div>\r\n                                            </td>\r\n                                            :\r\n                                            <tr className='item2'>\r\n                                            <td onClick={()=>this.edited(index)} className='item'>\r\n                                             <Data title={item.title} status={item.status}  />\r\n                                             \r\n                                            </td><td>\r\n                                            <Delete index={index}/>\r\n                                            </td>\r\n                                            \r\n                                        </tr>\r\n                                        }\r\n                                    </tr>\r\n                                </div>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                {/* <h1>All</h1> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default All\r\n\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        statusChange: (payload, index) => dispatch(statusChange(payload,index)),\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        isEdit: (index) => dispatch(isEdit(index)),\r\n        changeTitle: (payload,index) => dispatch(changeTitle(payload,index)),\r\n        changeSelect:(index) => dispatch(changeSelect(index)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Pending)\r\n\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\All.js",["109","110","111","112","113","114","115","116","117"],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Top.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Add.js",["118","119"],"import './todo.css'\r\n// import {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle } from '../Actions';\r\n\r\n\r\nimport React, {   useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo,newTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle } from '../Actions';\r\n\r\n\r\nfunction Modal1({newTodo}) {\r\n    const [value, setValue] = useState(\"\");\r\n    \r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        newTodo({title:value, status:'Incomplete', readonly:true, select:false, edit:false });\r\n        setValue(\"\");\r\n    };\r\n       \r\n    \r\n    \r\n    return (        \r\n        <form onSubmit={handleSubmit}>\r\n            <span ><input\r\n                type=\"text\"\r\n                value={value}\r\n                autoFocus={true}\r\n                className='input'\r\n                placeholder=\"What needs to be done?\"\r\n                onChange={e => setValue(e.target.value)}\r\n            /></span>\r\n        </form>\r\n    )\r\n}\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        changeTitle: (payload,index) => dispatch(changeTitle(payload,index)),\r\n        isEdit: (index) => dispatch(isEdit(index)),\r\n        newTodo:(payload) =>dispatch(newTodo(payload)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Modal1)\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Data.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Status.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\reset.js",["120"],"import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport './todo.css'\r\nimport { GrPowerReset } from 'react-icons/gr';\r\nimport { IoMdRefreshCircle } from \"react-icons/io\";\r\nimport {myTodo } from '../Actions';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n// import { render } from '@testing-library/react';\r\n\r\nclass Cancel extends Component {\r\n\r\n    reset=()=>{\r\n   \r\n        const newList= [];\r\n        this.props.myTodo(newList)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='resetbtn1'>\r\n                <button className='resetbtn' onClick={this.reset}>\r\n                   <span className='reset'> <IoMdRefreshCircle/> </span>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cancel)\r\n\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Checkbox.js",["121"],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\Delete.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\Actions\\index.js",["122","123","124","125"],"export const myTodo = (items)=>{\r\n    return{\r\n        type:'DATA_CREATED',\r\n        payload:items\r\n    }\r\n}\r\nexport const newTodo= (items)=>{\r\n    return{\r\n        type:'ITEM_ADDED',\r\n        payload:items\r\n    }\r\n}\r\nexport const statusChange =(payload,index)=>{\r\n    return{\r\n        type: 'STATUS_CHANGED',\r\n        payload,\r\n        index\r\n    }\r\n}\r\n\r\nexport const changeIndex =(payload,index) =>(\r\n    {\r\n        type:'CHANGE_INDEX',\r\n        payload,\r\n        index\r\n    }\r\n)\r\n\r\nexport  const removeIndex = (index)=>(\r\n    console.log('remove clicked'),\r\n    {\r\n        type:'REMOVE_INDEX',\r\n        index\r\n}\r\n)\r\n\r\nexport  const isEdit = (index)=>(\r\n    console.log('edit clicked'),\r\n    {\r\n        type:'EDIT_INDEX',\r\n        index\r\n}\r\n)\r\n\r\nexport const changeTitle =(payload,index) =>(\r\n    console.log('title changed', payload),\r\n    {\r\n        type:'TITLE_CHANGED',\r\n        payload,\r\n        index\r\n    }\r\n)\r\nexport const  changeSelect=(index) =>(\r\n    console.log('select changed', index),\r\n    {\r\n        type:'SELECT_CHANGED',\r\n        index\r\n    }\r\n)","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\reducer\\reducer.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\count.js",[],"E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\AllDel.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { Component } from 'react'\r\nimport './todo.css'\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { BiEditAlt } from 'react-icons/bi';\r\nimport { IoSaveOutline } from 'react-icons/io5';\r\n// import Data from './data';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle, changeSelect } from '../Actions';\r\nimport Data from './Data';\r\n// import Edit from './Edit';\r\nimport Delete  from './Delete';\r\nimport Status  from './Status';\r\nimport Checkbox from './Checkbox';\r\n// import Save from './Save';\r\n// import Cancel  from './Cancel';\r\nimport Reset from './reset';\r\nimport { AiOutlineClose} from \"react-icons/ai\";\r\nimport Add  from './Add';\r\n// import Category from './category';\r\nimport { BrowserRouter as BRouter } from 'react-router-dom'; \r\n// import Router from './router';\r\n// import Category from './category';\r\n// import All from './All';\r\nimport Completed from './completed';\r\nimport Pending from './Pending';\r\nexport class AllDel extends Component {\r\n    del=()=>{\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.del} className='delall' >\r\n                <span className='word'> \r\n                    <AiOutlineClose/>\r\n                </span>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        // changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AllDel)\r\n\r\n","E:\\Abdul\\gitstuff\\JS-TASK\\dynamiclist\\src\\components\\footer.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":11},{"ruleId":"146","severity":1,"message":"150","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":14},{"ruleId":"146","severity":1,"message":"151","line":12,"column":9,"nodeType":"148","messageId":"149","endLine":12,"endColumn":15},{"ruleId":"146","severity":1,"message":"152","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"153","line":12,"column":8,"nodeType":"148","messageId":"149","endLine":12,"endColumn":14},{"ruleId":"146","severity":1,"message":"154","line":17,"column":8,"nodeType":"148","messageId":"149","endLine":17,"endColumn":13},{"ruleId":"146","severity":1,"message":"155","line":18,"column":8,"nodeType":"148","messageId":"149","endLine":18,"endColumn":11},{"ruleId":"146","severity":1,"message":"156","line":20,"column":27,"nodeType":"148","messageId":"149","endLine":20,"endColumn":34},{"ruleId":"146","severity":1,"message":"157","line":25,"column":8,"nodeType":"148","messageId":"149","endLine":25,"endColumn":15},{"ruleId":"146","severity":1,"message":"158","line":26,"column":10,"nodeType":"148","messageId":"149","endLine":26,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":41,"column":9,"nodeType":"161","messageId":"162","endLine":41,"endColumn":56},{"ruleId":"159","severity":1,"message":"160","line":42,"column":9,"nodeType":"161","messageId":"162","endLine":42,"endColumn":35},{"ruleId":"146","severity":1,"message":"152","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"153","line":13,"column":8,"nodeType":"148","messageId":"149","endLine":13,"endColumn":14},{"ruleId":"146","severity":1,"message":"154","line":17,"column":8,"nodeType":"148","messageId":"149","endLine":17,"endColumn":13},{"ruleId":"146","severity":1,"message":"155","line":18,"column":8,"nodeType":"148","messageId":"149","endLine":18,"endColumn":11},{"ruleId":"146","severity":1,"message":"156","line":20,"column":27,"nodeType":"148","messageId":"149","endLine":20,"endColumn":34},{"ruleId":"146","severity":1,"message":"163","line":24,"column":8,"nodeType":"148","messageId":"149","endLine":24,"endColumn":17},{"ruleId":"146","severity":1,"message":"158","line":26,"column":10,"nodeType":"148","messageId":"149","endLine":26,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":41,"column":9,"nodeType":"161","messageId":"162","endLine":41,"endColumn":56},{"ruleId":"159","severity":1,"message":"160","line":42,"column":9,"nodeType":"161","messageId":"162","endLine":42,"endColumn":35},{"ruleId":"146","severity":1,"message":"152","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"153","line":13,"column":8,"nodeType":"148","messageId":"149","endLine":13,"endColumn":14},{"ruleId":"146","severity":1,"message":"154","line":17,"column":8,"nodeType":"148","messageId":"149","endLine":17,"endColumn":13},{"ruleId":"146","severity":1,"message":"155","line":18,"column":8,"nodeType":"148","messageId":"149","endLine":18,"endColumn":11},{"ruleId":"146","severity":1,"message":"156","line":20,"column":27,"nodeType":"148","messageId":"149","endLine":20,"endColumn":34},{"ruleId":"146","severity":1,"message":"163","line":24,"column":8,"nodeType":"148","messageId":"149","endLine":24,"endColumn":17},{"ruleId":"146","severity":1,"message":"158","line":26,"column":10,"nodeType":"148","messageId":"149","endLine":26,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":41,"column":9,"nodeType":"161","messageId":"162","endLine":41,"endColumn":56},{"ruleId":"159","severity":1,"message":"160","line":42,"column":9,"nodeType":"161","messageId":"162","endLine":42,"endColumn":35},{"ruleId":"146","severity":1,"message":"164","line":7,"column":25,"nodeType":"148","messageId":"149","endLine":7,"endColumn":37},{"ruleId":"146","severity":1,"message":"165","line":7,"column":39,"nodeType":"148","messageId":"149","endLine":7,"endColumn":50},{"ruleId":"146","severity":1,"message":"166","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":22},{"ruleId":"146","severity":1,"message":"167","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":30,"column":34,"nodeType":"170","messageId":"171","endLine":30,"endColumn":35},{"ruleId":"168","severity":1,"message":"169","line":38,"column":32,"nodeType":"170","messageId":"171","endLine":38,"endColumn":33},{"ruleId":"168","severity":1,"message":"169","line":46,"column":42,"nodeType":"170","messageId":"171","endLine":46,"endColumn":43},{"ruleId":"168","severity":1,"message":"169","line":54,"column":41,"nodeType":"170","messageId":"171","endLine":54,"endColumn":42},{"ruleId":"146","severity":1,"message":"152","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":19},{"ruleId":"146","severity":1,"message":"172","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":23},{"ruleId":"146","severity":1,"message":"164","line":8,"column":17,"nodeType":"148","messageId":"149","endLine":8,"endColumn":29},{"ruleId":"146","severity":1,"message":"165","line":8,"column":31,"nodeType":"148","messageId":"149","endLine":8,"endColumn":42},{"ruleId":"146","severity":1,"message":"173","line":8,"column":57,"nodeType":"148","messageId":"149","endLine":8,"endColumn":63},{"ruleId":"146","severity":1,"message":"174","line":8,"column":65,"nodeType":"148","messageId":"149","endLine":8,"endColumn":76},{"ruleId":"146","severity":1,"message":"175","line":8,"column":78,"nodeType":"148","messageId":"149","endLine":8,"endColumn":90},{"ruleId":"146","severity":1,"message":"176","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":12},{"ruleId":"146","severity":1,"message":"177","line":11,"column":8,"nodeType":"148","messageId":"149","endLine":11,"endColumn":14},{"ruleId":"146","severity":1,"message":"153","line":12,"column":8,"nodeType":"148","messageId":"149","endLine":12,"endColumn":14},{"ruleId":"146","severity":1,"message":"178","line":13,"column":8,"nodeType":"148","messageId":"149","endLine":13,"endColumn":16},{"ruleId":"146","severity":1,"message":"154","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":13},{"ruleId":"146","severity":1,"message":"155","line":18,"column":8,"nodeType":"148","messageId":"149","endLine":18,"endColumn":11},{"ruleId":"146","severity":1,"message":"156","line":20,"column":27,"nodeType":"148","messageId":"149","endLine":20,"endColumn":34},{"ruleId":"146","severity":1,"message":"163","line":24,"column":8,"nodeType":"148","messageId":"149","endLine":24,"endColumn":17},{"ruleId":"146","severity":1,"message":"157","line":25,"column":8,"nodeType":"148","messageId":"149","endLine":25,"endColumn":15},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Sample' is defined but never used.","'AllDel' is defined but never used.","'BiEditAlt' is defined but never used.","'Status' is defined but never used.","'Reset' is defined but never used.","'Add' is defined but never used.","'BRouter' is defined but never used.","'Pending' is defined but never used.","'Route' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Completed' is defined but never used.","'statusChange' is defined but never used.","'changeIndex' is defined but never used.","'GrPowerReset' is defined but never used.","'TiTick' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'IoSaveOutline' is defined but never used.","'isEdit' is defined but never used.","'changeTitle' is defined but never used.","'changeSelect' is defined but never used.","'Data' is defined but never used.","'Delete' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]