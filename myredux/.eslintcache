[{"E:\\Abdul\\myredux\\src\\index.js":"1","E:\\Abdul\\myredux\\src\\reportWebVitals.js":"2","E:\\Abdul\\myredux\\src\\App.js":"3","E:\\Abdul\\myredux\\src\\reducer\\reducer.js":"4","E:\\Abdul\\myredux\\src\\components\\index.js":"5","E:\\Abdul\\myredux\\src\\components\\Todo.js":"6","E:\\Abdul\\myredux\\src\\actions\\index.js":"7","E:\\Abdul\\myredux\\src\\components\\data.js":"8","E:\\Abdul\\myredux\\src\\fa icons\\index.js":"9","E:\\Abdul\\myredux\\src\\components\\Edit.js":"10","E:\\Abdul\\myredux\\src\\components\\Delete.js":"11","E:\\Abdul\\myredux\\src\\components\\Status.js":"12","E:\\Abdul\\myredux\\src\\components\\Checkbox.js":"13","E:\\Abdul\\myredux\\src\\components\\Cancel.js":"14","E:\\Abdul\\myredux\\src\\components\\Reset.js":"15","E:\\Abdul\\myredux\\src\\components\\Add.js":"16"},{"size":635,"mtime":1607321494025,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":319,"mtime":1607498959692,"results":"20","hashOfConfig":"18"},{"size":2689,"mtime":1607688273143,"results":"21","hashOfConfig":"18"},{"size":84,"mtime":1607321633881,"results":"22","hashOfConfig":"18"},{"size":7930,"mtime":1607690074385,"results":"23","hashOfConfig":"18"},{"size":957,"mtime":1607590186062,"results":"24","hashOfConfig":"18"},{"size":270,"mtime":1607688434527,"results":"25","hashOfConfig":"18"},{"size":285,"mtime":1607413417732,"results":"26","hashOfConfig":"18"},{"size":1019,"mtime":1607692841287,"results":"27","hashOfConfig":"18"},{"size":1135,"mtime":1607689017066,"results":"28","hashOfConfig":"18"},{"size":306,"mtime":1607514118748,"results":"29","hashOfConfig":"18"},{"size":2032,"mtime":1607687399205,"results":"30","hashOfConfig":"18"},{"size":980,"mtime":1607505171001,"results":"31","hashOfConfig":"18"},{"size":1018,"mtime":1607691553214,"results":"32","hashOfConfig":"18"},{"size":3186,"mtime":1607692415393,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"15guhnz",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Abdul\\myredux\\src\\index.js",[],["69","70"],"E:\\Abdul\\myredux\\src\\reportWebVitals.js",[],"E:\\Abdul\\myredux\\src\\App.js",[],"E:\\Abdul\\myredux\\src\\reducer\\reducer.js",[],"E:\\Abdul\\myredux\\src\\components\\index.js",[],"E:\\Abdul\\myredux\\src\\components\\Todo.js",["71","72","73","74","75"],"import React, { Component } from 'react'\r\nimport './todo.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n// import { FaBeer } from 'react-icons/fa';\r\n// import Data from './data';\r\nimport {connect} from 'react-redux';\r\nimport {myTodo, statusChange, changeIndex, removeIndex, isEdit, changeTitle, changeSelect } from '../actions';\r\nimport Data from './data';\r\nimport Edit from './Edit';\r\nimport Delete  from './Delete';\r\nimport Status  from './Status';\r\nimport Checkbox from './Checkbox';\r\n// import Save from './Save';\r\nimport Cancel  from './Cancel';\r\nimport Reset from './Reset';\r\nimport Add  from './Add';\r\n\r\n\r\nexport class Todo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             text:'',\r\n             data:'',\r\n             modify:null,\r\n             removeItems:[],\r\n            //  isEditing:false,\r\n        }\r\n    }\r\n    addItem=()=>{\r\n        let newList=[...this.props.items];\r\n        const item={title:this.state.text,status:'Incomplete',readonly:true, select:false}\r\n        newList.unshift(item);\r\n        this.props.myTodo(newList);\r\n        this.setState({\r\n            text:'',\r\n           \r\n        })\r\n    }\r\n    titlechange=( index)=>{\r\n        console.log('save clicked', this.state.data);\r\n        {this.props.changeTitle(this.state.data,index)}\r\n        {this.props.isEdit(index)}\r\n        this.setState({\r\n            data:'',\r\n            \r\n        })\r\n    \r\n    }\r\n   \r\nreset=()=>{\r\n    const newList= [];\r\n    this.props.myTodo(newList)\r\n}\r\nedited=(index)=>{\r\n    console.log('edit linked', index)\r\n    this.props.isEdit(index)\r\n    this.setState({\r\n        // index:index,\r\n        modify:index,\r\n    })\r\n    console.log('index', this.state.modify)\r\n}\r\n// deleteItems=(index)=>{\r\n//     // this.setState({\r\n//     //     removeItems:[\r\n//     //         ...this.state.removeItems, index\r\n//     //     ]\r\n//     // })\r\n//     // for (let i=0; i<this.state.removeItems.length;i++){\r\n//     //     for (let j=0; j<this.state.removeItems.length;j++){\r\n//     //         while(i!==j){\r\n//     //             if(this.state.removeItems[i]=== this.state.removeItems[j]){\r\n//     //                 this.state.removeItems.splice(j,1)\r\n//     //             }\r\n//     //         }\r\n//     //     }\r\n//     // }\r\n//     this.props.changeSelect(index)\r\n//     console.log('remove items',this.props.items)\r\n    \r\n// }\r\n// deletemany=()=>{\r\n//     // const selectlist = []\r\n//     for(let i =0; i<this.props.items.length;i++){\r\n//         if(this.props.items[i].select=== true){\r\n//             console.log('select items', this.props.items[i])\r\n//             this.props.removeIndex(i) \r\n//         }\r\n//     }}\r\nrender() {\r\n        return (\r\n            <div className='App'>\r\n                <div className='top'>\r\n                    <div className='divadd'>\r\n                        \r\n                       <Add index={this.state.modify} />\r\n                       {/* <button onClick={this.deletemany}>Delete many</button> */}\r\n                       \r\n                    </div>\r\n                   \r\n                </div>\r\n     \r\n                <div>\r\n                    {/* <div>\r\n                        <p>{this.state.item} of {this.props.items.length} done</p>\r\n                    </div> */}\r\n                    <table className='table'>\r\n                        <tbody className='tbody'>\r\n                            {this.props.items.map((item,index)=>\r\n                            (<div key={index} className='rowParent'  style={{opacity:item.status==='Complete' ? 0.5: 1}}>\r\n                                   \r\n                                     <tr className='row'>\r\n                                        <td className='item1'>\r\n                                          <Checkbox status={item.status} index={index}/>\r\n                                        </td>\r\n                                       \r\n                                            {item.readonly === false?\r\n                                                \r\n                                                <td className='item2'>\r\n                                                    <input value={this.state.data} className='editText' onChange={(event)=>this.setState({data:event.target.value})} placeholder={item.title}/>\r\n                                                    </td>\r\n                                            \r\n                                            :\r\n                                                <td className='item2'><Data title={item.title} />\r\n                                            <Status status={item.status}/></td>\r\n                                            }\r\n                                            \r\n                                            \r\n                                        \r\n                                        <td>\r\n                                            <div className='buttons'>\r\n                                                {item.readonly === false ?\r\n                                                   <div><button className='edit1' onClick={()=>this.titlechange(index)}>\r\n                                                             <FontAwesomeIcon icon='save'/>\r\n                                                        </button></div>\r\n                                                \r\n                                                 :\r\n                                                 <div>\r\n                                                 <button className='edit' onClick={()=>this.edited(index)}>\r\n                                                   <span className='word'><FontAwesomeIcon icon='edit' /></span>\r\n                                                </button> </div>   \r\n                                            }\r\n                                                \r\n                                                <Delete index={index}/>\r\n                                            </div>\r\n                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                \r\n                            </div> ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\nconst mapStateToProps= state =>{\r\n    const {items} =state.todo\r\n    return{\r\n     items   \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        statusChange: (payload, index) => dispatch(statusChange(payload,index)),\r\n        myTodo : (payload)=> dispatch(myTodo(payload)),\r\n        changeIndex :(payload,index)=> dispatch(changeIndex(payload,index)),\r\n        removeIndex: (index)=> dispatch(removeIndex(index)),\r\n        isEdit: (index) => dispatch(isEdit(index)),\r\n        changeTitle: (payload,index) => dispatch(changeTitle(payload,index)),\r\n        changeSelect:(index) => dispatch(changeSelect(index)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Todo)\r\n\r\n\r\n // (<tr className='row'>\r\n                                    //     <td>\r\n                                    //         <input value={this.state.data} className='editText' onChange={(event)=>this.setState({data:event.target.value})} placeholder={item.title}/>\r\n                                    //     </td>\r\n                                    //     <td className='editTools'>\r\n                                    //         {this.state.data !== '' ? \r\n                                    //            <button className='edit1' onClick={()=>this.titlechange(index)}>\r\n                                    //            <FontAwesomeIcon icon='save'/>\r\n                                    //        </button>  : null} <Cancel index={index}/>\r\n                                    //     </td>\r\n                                        \r\n                                    //  </tr>) :","E:\\Abdul\\myredux\\src\\actions\\index.js",["76","77","78","79"],"export const myTodo = (items)=>{\r\n    return{\r\n        type:'DATA_CREATED',\r\n        payload:items\r\n    }\r\n}\r\nexport const statusChange =(payload,index)=>{\r\n    return{\r\n        type: 'STATUS_CHANGED',\r\n        payload,\r\n        index\r\n    }\r\n}\r\n\r\nexport const changeIndex =(payload,index) =>(\r\n    {\r\n        type:'CHANGE_INDEX',\r\n        payload,\r\n        index\r\n    }\r\n)\r\n\r\nexport  const removeIndex = (index)=>(\r\n    console.log('remove clicked'),\r\n    {\r\n        type:'REMOVE_INDEX',\r\n        index\r\n}\r\n)\r\n\r\nexport  const isEdit = (index)=>(\r\n    console.log('edit clicked'),\r\n    {\r\n        type:'EDIT_INDEX',\r\n        index\r\n}\r\n)\r\n\r\nexport const changeTitle =(payload,index) =>(\r\n    console.log('title changed', payload),\r\n    {\r\n        type:'TITLE_CHANGED',\r\n        payload,\r\n        index\r\n    }\r\n)\r\nexport const changeSelect =(index) =>(\r\n    console.log('select changed', index),\r\n    {\r\n        type:'SELECT_CHANGED',\r\n        index\r\n    }\r\n)","E:\\Abdul\\myredux\\src\\components\\data.js",["80"],"E:\\Abdul\\myredux\\src\\fa icons\\index.js",[],"E:\\Abdul\\myredux\\src\\components\\Edit.js",[],"E:\\Abdul\\myredux\\src\\components\\Delete.js",[],"E:\\Abdul\\myredux\\src\\components\\Status.js",[],"E:\\Abdul\\myredux\\src\\components\\Checkbox.js",[],"E:\\Abdul\\myredux\\src\\components\\Cancel.js",[],"E:\\Abdul\\myredux\\src\\components\\Reset.js",[],"E:\\Abdul\\myredux\\src\\components\\Add.js",["81","82","83","84","85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":9,"column":8,"nodeType":"93","messageId":"94","endLine":9,"endColumn":12},{"ruleId":"91","severity":1,"message":"95","line":14,"column":8,"nodeType":"93","messageId":"94","endLine":14,"endColumn":14},{"ruleId":"91","severity":1,"message":"96","line":15,"column":8,"nodeType":"93","messageId":"94","endLine":15,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":43,"column":9,"nodeType":"99","messageId":"100","endLine":43,"endColumn":56},{"ruleId":"97","severity":1,"message":"98","line":44,"column":9,"nodeType":"99","messageId":"100","endLine":44,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":24,"column":34,"nodeType":"103","messageId":"104","endLine":24,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":32,"column":32,"nodeType":"103","messageId":"104","endLine":32,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":40,"column":42,"nodeType":"103","messageId":"104","endLine":40,"endColumn":43},{"ruleId":"101","severity":1,"message":"102","line":48,"column":41,"nodeType":"103","messageId":"104","endLine":48,"endColumn":42},{"ruleId":"91","severity":1,"message":"105","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":14},{"ruleId":"91","severity":1,"message":"106","line":5,"column":17,"nodeType":"93","messageId":"94","endLine":5,"endColumn":29},{"ruleId":"91","severity":1,"message":"107","line":5,"column":31,"nodeType":"93","messageId":"94","endLine":5,"endColumn":42},{"ruleId":"91","severity":1,"message":"95","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":14},{"ruleId":"91","severity":1,"message":"108","line":11,"column":10,"nodeType":"93","messageId":"94","endLine":11,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":46,"column":9,"nodeType":"99","messageId":"100","endLine":46,"endColumn":56},{"ruleId":"97","severity":1,"message":"98","line":47,"column":9,"nodeType":"99","messageId":"100","endLine":47,"endColumn":35},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Edit' is defined but never used.","Identifier","unusedVar","'Cancel' is defined but never used.","'Reset' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Status' is defined but never used.","'statusChange' is defined but never used.","'changeIndex' is defined but never used.","'faLeaf' is defined but never used.","no-global-assign","no-unsafe-negation"]